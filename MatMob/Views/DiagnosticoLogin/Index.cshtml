@model MatMob.Models.ViewModels.DiagnosticoLoginDetalhadoViewModel
@{
    ViewData["Title"] = "Diagnóstico de Login";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card border-primary">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-stethoscope me-2"></i>Diagnóstico de Login do Sistema
                    </h4>
                </div>
            </div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.Erro))
    {
        <div class="row mt-3">
            <div class="col-12">
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Erro:</strong> @Model.Erro
                </div>
            </div>
        </div>
    }

    <!-- Informações das Roles -->
    <div class="row mt-3">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-users-cog me-2"></i>Status das Roles
                    </h5>
                </div>
                <div class="card-body">
                    @foreach (var role in Model.RolesExistem)
                    {
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span><strong>@role.Key:</strong></span>
                            <span class="badge bg-@(role.Value ? "success" : "danger")">
                                @(role.Value ? "Existe" : "Não Existe")
                            </span>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Informações do Usuário Admin -->
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0">
                        <i class="fas fa-user-shield me-2"></i>Usuário Administrador
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span><strong>Existe:</strong></span>
                        <span class="badge bg-@(Model.UsuarioAdminExiste ? "success" : "danger")">
                            @(Model.UsuarioAdminExiste ? "Sim" : "Não")
                        </span>
                    </div>

                    @if (Model.UsuarioAdminExiste)
                    {
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span><strong>Email Confirmado:</strong></span>
                            <span class="badge bg-@(Model.AdminEmailConfirmado ? "success" : "danger")">
                                @(Model.AdminEmailConfirmado ? "Sim" : "Não")
                            </span>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span><strong>Senha Correta:</strong></span>
                            <span class="badge bg-@(Model.SenhaAdminCorreta ? "success" : "danger")">
                                @(Model.SenhaAdminCorreta ? "Sim" : "Não")
                            </span>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span><strong>Pode Fazer Login:</strong></span>
                            <span class="badge bg-@(Model.PodeFazerLogin ? "success" : "danger")">
                                @(Model.PodeFazerLogin ? "Sim" : "Não")
                            </span>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span><strong>Tentativas Falhadas:</strong></span>
                            <span class="badge bg-@(Model.AdminAccessFailedCount == 0 ? "success" : "warning")">
                                @Model.AdminAccessFailedCount
                            </span>
                        </div>

                        <div class="mb-2">
                            <strong>Roles:</strong>
                            @if (Model.AdminRoles.Any())
                            {
                                @foreach (var role in Model.AdminRoles)
                                {
                                    <span class="badge bg-primary me-1">@role</span>
                                }
                            }
                            else
                            {
                                <span class="badge bg-danger">Nenhuma role</span>
                            }
                        </div>

                        <div class="mb-2">
                            <strong>ID:</strong> <code>@Model.AdminId</code>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Configurações do Identity -->
    <div class="row mt-3">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-cogs me-2"></i>Configurações do Identity
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span><strong>Requer Email Confirmado:</strong></span>
                        <span class="badge bg-@(Model.RequireConfirmedEmail ? "warning" : "success")">
                            @(Model.RequireConfirmedEmail ? "Sim" : "Não")
                        </span>
                    </div>

                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span><strong>Requer Telefone Confirmado:</strong></span>
                        <span class="badge bg-@(Model.RequireConfirmedPhoneNumber ? "warning" : "success")">
                            @(Model.RequireConfirmedPhoneNumber ? "Sim" : "Não")
                        </span>
                    </div>

                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span><strong>Requer Conta Confirmada:</strong></span>
                        <span class="badge bg-@(Model.RequireConfirmedAccount ? "warning" : "success")">
                            @(Model.RequireConfirmedAccount ? "Sim" : "Não")
                        </span>
                    </div>

                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span><strong>Total de Usuários:</strong></span>
                        <span class="badge bg-info">@Model.TotalUsuarios</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Testes -->
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-vial me-2"></i>Testes de Login
                    </h5>
                </div>
                <div class="card-body">
                    <form id="formTesteLogin">
                        <div class="mb-3">
                            <label for="emailTeste" class="form-label">Email:</label>
                            <input type="email" class="form-control" id="emailTeste" value="admin@matmob.com">
                        </div>
                        <div class="mb-3">
                            <label for="senhaTeste" class="form-label">Senha:</label>
                            <input type="password" class="form-control" id="senhaTeste" value="Admin123!">
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-play me-1"></i>Testar Login
                        </button>
                    </form>

                    <div id="resultadoTeste" class="mt-3" style="display: none;"></div>

                    <hr>

                    <button type="button" class="btn btn-warning" onclick="recriarUsuarioAdmin()">
                        <i class="fas fa-redo me-1"></i>Recriar Usuário Admin
                    </button>

                    <div id="resultadoRecriacao" class="mt-3" style="display: none;"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Links úteis -->
    <div class="row mt-3">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-dark text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-link me-2"></i>Links Úteis
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <a href="/Identity/Account/Login" class="btn btn-outline-primary btn-block">
                                <i class="fas fa-sign-in-alt me-1"></i>Página de Login
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a href="/Identity/Account/Register" class="btn btn-outline-success btn-block">
                                <i class="fas fa-user-plus me-1"></i>Registro
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a href="/Dashboard" class="btn btn-outline-info btn-block">
                                <i class="fas fa-tachometer-alt me-1"></i>Dashboard
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a href="/" class="btn btn-outline-secondary btn-block">
                                <i class="fas fa-home me-1"></i>Home
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.getElementById('formTesteLogin').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const email = document.getElementById('emailTeste').value;
    const senha = document.getElementById('senhaTeste').value;
    
    fetch('/DiagnosticoLogin/TestarLogin', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `email=${encodeURIComponent(email)}&senha=${encodeURIComponent(senha)}`
    })
    .then(response => response.json())
    .then(data => {
        const resultado = document.getElementById('resultadoTeste');
        resultado.style.display = 'block';
        
        if (data.sucesso) {
            resultado.innerHTML = `
                <div class="alert alert-success">
                    <i class="fas fa-check-circle me-2"></i>
                    <strong>Login bem-sucedido!</strong>
                </div>
            `;
        } else {
            resultado.innerHTML = `
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Falha no login:</strong><br>
                    ${data.erro || 'Erro desconhecido'}<br><br>
                    <small>
                        <strong>Detalhes:</strong><br>
                        Requires Two Factor: ${data.requiresTwoFactor}<br>
                        Is Locked Out: ${data.isLockedOut}<br>
                        Is Not Allowed: ${data.isNotAllowed}<br>
                        Email Confirmed: ${data.emailConfirmed}<br>
                        Can Sign In: ${data.canSignIn}<br>
                        Roles: ${data.roles ? data.roles.join(', ') : 'Nenhuma'}
                    </small>
                </div>
            `;
        }
    })
    .catch(error => {
        const resultado = document.getElementById('resultadoTeste');
        resultado.style.display = 'block';
        resultado.innerHTML = `
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-triangle me-2"></i>
                <strong>Erro na requisição:</strong> ${error.message}
            </div>
        `;
    });
});

function recriarUsuarioAdmin() {
    if (!confirm('Tem certeza que deseja recriar o usuário administrador? Isso irá remover o usuário atual e criar um novo.')) {
        return;
    }
    
    fetch('/DiagnosticoLogin/RecriarUsuarioAdmin', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        }
    })
    .then(response => response.json())
    .then(data => {
        const resultado = document.getElementById('resultadoRecriacao');
        resultado.style.display = 'block';
        
        if (data.sucesso) {
            resultado.innerHTML = `
                <div class="alert alert-success">
                    <i class="fas fa-check-circle me-2"></i>
                    ${data.mensagem}
                </div>
            `;
            // Recarregar a página após 2 segundos
            setTimeout(() => {
                window.location.reload();
            }, 2000);
        } else {
            resultado.innerHTML = `
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Erro:</strong> ${data.erro}
                </div>
            `;
        }
    })
    .catch(error => {
        const resultado = document.getElementById('resultadoRecriacao');
        resultado.style.display = 'block';
        resultado.innerHTML = `
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-triangle me-2"></i>
                <strong>Erro na requisição:</strong> ${error.message}
            </div>
        `;
    });
}
</script>
