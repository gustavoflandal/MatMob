@model MatMob.Models.ViewModels.UsuarioViewModel
@{
    ViewData["Title"] = "Excluir Usuário";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="text-danger"><i class="fas fa-user-times"></i> Excluir Usuário</h2>
    <a asp-action="Index" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left"></i> Voltar à Lista
    </a>
</div>

<div class="alert alert-danger">
    <i class="fas fa-exclamation-triangle"></i>
    <strong>Atenção!</strong> Esta ação é irreversível. Você tem certeza de que deseja excluir este usuário?
</div>

<div class="card">
    <div class="card-header bg-danger text-white">
        <h5 class="card-title mb-0">
            <i class="fas fa-user"></i> Informações do Usuário a ser Excluído
        </h5>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <dl class="row">
                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Email)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Email)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.FullName)</dt>
                    <dd class="col-sm-8">
                        @if (!string.IsNullOrEmpty(Model.FullName.Trim()))
                        {
                            @Html.DisplayFor(model => model.FullName)
                        }
                        else
                        {
                            <em class="text-muted">Não informado</em>
                        }
                    </dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Status)</dt>
                    <dd class="col-sm-8">
                        @if (Model.IsActive)
                        {
                            <span class="badge bg-success">Ativo</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Inativo</span>
                        }
                    </dd>
                </dl>
            </div>
            <div class="col-md-6">
                <dl class="row">
                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.EmailConfirmed)</dt>
                    <dd class="col-sm-8">
                        @if (Model.EmailConfirmed)
                        {
                            <span class="text-success">Confirmado</span>
                        }
                        else
                        {
                            <span class="text-danger">Nao confirmado</span>
                        }
                    </dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.CreatedAt)</dt>
                    <dd class="col-sm-8">
                        @if (Model.CreatedAt.HasValue)
                        {
                            @Model.CreatedAt.Value.ToString("dd/MM/yyyy HH:mm")
                        }
                        else
                        {
                            <em class="text-muted">Não informado</em>
                        }
                    </dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.LastLoginAt)</dt>
                    <dd class="col-sm-8">
                        @if (Model.LastLoginAt.HasValue)
                        {
                            @Model.LastLoginAt.Value.ToString("dd/MM/yyyy HH:mm")
                        }
                        else
                        {
                            <em class="text-muted">Nunca logou</em>
                        }
                    </dd>
                </dl>
            </div>
        </div>

        @if (Model.Roles.Any())
        {
            <div class="mt-3">
                <h6><i class="fas fa-users"></i> Roles Atribuídas</h6>
                <div class="d-flex flex-wrap gap-2">
                    @foreach (var role in Model.Roles)
                    {
                        <span class="badge bg-primary">@role</span>
                    }
                </div>
            </div>
        }

        <div class="alert alert-warning mt-3">
            <h6><i class="fas fa-exclamation-triangle"></i> Consequências da Exclusão</h6>
            <ul class="mb-0">
                <li>O usuário será permanentemente removido do sistema</li>
                <li>Todas as associações de roles serão removidas</li>
                <li>O histórico de login será mantido por motivos de auditoria</li>
                <li>Esta ação não pode ser desfeita</li>
            </ul>
        </div>
    </div>
</div>

<div class="mt-3">
    <form asp-action="Delete" method="post" class="d-inline">
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-danger" onclick="return confirmDelete()">
            <i class="fas fa-trash"></i> Confirmar Exclusão
        </button>
    </form>
    <a asp-action="Index" class="btn btn-secondary">
        <i class="fas fa-times"></i> Cancelar
    </a>
    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-info">
        <i class="fas fa-eye"></i> Visualizar Detalhes
    </a>
</div>

@section Scripts {
    <script>
        function confirmDelete() {
            return confirm('ATENÇÃO: Você tem certeza de que deseja EXCLUIR PERMANENTEMENTE este usuário?\n\nEsta ação não pode ser desfeita!\n\nClique em OK para confirmar ou Cancelar para voltar.');
        }
    </script>
}