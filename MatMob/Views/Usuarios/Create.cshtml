@model MatMob.Models.ViewModels.CreateUsuarioViewModel
@{
    ViewData["Title"] = "Criar Usuário";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-user-plus"></i> Criar Usuário</h2>
    <a asp-action="Index" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left"></i> Voltar à Lista
    </a>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-user-plus"></i> Informações do Usuário
                </h5>
            </div>
            <div class="card-body">
                <form asp-action="Create" method="post">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                    
                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <label asp-for="Email" class="form-label"></label>
                            <input asp-for="Email" class="form-control" placeholder="usuario@exemplo.com" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="FirstName" class="form-label"></label>
                            <input asp-for="FirstName" class="form-control" placeholder="Nome" />
                            <span asp-validation-for="FirstName" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="LastName" class="form-label"></label>
                            <input asp-for="LastName" class="form-control" placeholder="Sobrenome" />
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="Password" class="form-label"></label>
                            <div class="input-group">
                                <input asp-for="Password" class="form-control" type="password" />
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('Password')">
                                    <i class="fas fa-eye" id="Password-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="Password" class="text-danger"></span>
                            <div class="form-text">Mínimo de 6 caracteres</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="ConfirmPassword" class="form-label"></label>
                            <div class="input-group">
                                <input asp-for="ConfirmPassword" class="form-control" type="password" />
                                <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('ConfirmPassword')">
                                    <i class="fas fa-eye" id="ConfirmPassword-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Roles</label>
                        @if (Model.RolesDisponiveis.Any())
                        {
                            <div class="row">
                                @foreach (var role in Model.RolesDisponiveis)
                                {
                                    <div class="col-md-6 mb-2">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" 
                                                   name="SelectedRoles" value="@role.Key" 
                                                   id="role_@role.Key" 
                                                   @(Model.SelectedRoles?.Contains(role.Key) == true ? "checked" : "") />
                                            <label class="form-check-label" for="role_@role.Key">
                                                <strong>@role.Key</strong>
                                                @if (!string.IsNullOrEmpty(role.Value))
                                                {
                                                    <br><small class="text-muted">@role.Value</small>
                                                }
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle"></i>
                                Nenhuma role disponível. Configure as roles no sistema antes de criar usuários.
                            </div>
                        }
                    </div>

                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-save"></i> Criar Usuário
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-times"></i> Cancelar
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">
                    <i class="fas fa-info-circle"></i> Informações
                </h6>
            </div>
            <div class="card-body">
                <div class="alert alert-info">
                    <h6><i class="fas fa-lightbulb"></i> Dicas</h6>
                    <ul class="mb-0">
                        <li>O email será usado como nome de usuário</li>
                        <li>O email será marcado como confirmado automaticamente</li>
                        <li>O usuário será criado como ativo</li>
                        <li>Selecione pelo menos uma role para o usuário</li>
                        <li>A senha deve ter pelo menos 6 caracteres</li>
                    </ul>
                </div>

                <div class="alert alert-warning">
                    <h6><i class="fas fa-shield-alt"></i> Segurança</h6>
                    <p class="mb-0">
                        Certifique-se de que a senha atende aos requisitos de segurança da sua organização.
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function togglePassword(fieldId) {
            const field = document.getElementById(fieldId);
            const icon = document.getElementById(fieldId + '-eye');
            
            if (field.type === 'password') {
                field.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                field.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }
    </script>
}