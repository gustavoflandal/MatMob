<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MatMob</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/login.css" asp-append-version="true" />
</head>
<body>
    @RenderBody()

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    <script>
        // Auto-focus no primeiro campo
        document.addEventListener('DOMContentLoaded', function() {
            const firstInput = document.querySelector('input[type="email"]');
            if (firstInput) {
                setTimeout(() => firstInput.focus(), 300);
            }
        });

        // Animação no botão de submit
        document.getElementById('login-submit')?.addEventListener('click', function(e) {
            const btn = e.target;
            btn.disabled = true;
            setTimeout(() => {
                btn.disabled = false;
            }, 2000);
        });

        // Efeito de partículas
        function createParticle() {
            const particle = document.createElement('div');
            particle.style.cssText = `
                position: absolute;
                width: 2px;
                height: 2px;
                background: rgba(255, 255, 255, 0.6);
                border-radius: 50%;
                pointer-events: none;
                animation: particle 6s linear forwards;
                top: ${Math.random() * 100}%;
                left: ${Math.random() * 100}%;
            `;
            
            document.querySelector('.login-header').appendChild(particle);
            
            setTimeout(() => {
                particle.remove();
            }, 6000);
        }

        // Criar partículas periodicamente
        setInterval(createParticle, 2000);
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
